local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 250)
frame.Position = UDim2.new(0.25, 0, 0.25, 0)
frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
frame.BorderSizePixel = 0 
frame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Text = "<b><i>SFOTH IV</i></b>"
title.Size = UDim2.new(0.8, 0, 0.1, 0)
title.Position = UDim2.new(0.1, 0, 0, 0)
title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
title.TextColor3 = Color3.fromRGB(0, 0, 139)
title.Font = Enum.Font.SourceSansBold
title.RichText = true
title.TextSize = 24
title.BorderSizePixel = 0
title.Parent = frame

local uiStroke = Instance.new("UIStroke")
uiStroke.Thickness = 2
uiStroke.Parent = frame
local colors = {Color3.fromRGB(255, 0, 0), Color3.fromRGB(0, 255, 0), Color3.fromRGB(0, 0, 255)}
local currentColorIndex = 1
local function updateBorderColor()
    uiStroke.Color = colors[currentColorIndex]
    currentColorIndex = (currentColorIndex % #colors) + 1
end

spawn(function()
    while true do
        updateBorderColor()
        wait(1)
    end
end)

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0.1, 0)
uiCorner.Parent = frame

local function createButton(name, text, position, action)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Text = text
    button.Size = UDim2.new(0.8, 0, 0.1, 0)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 20
    

    local buttonUICorner = Instance.new("UICorner")
    buttonUICorner.CornerRadius = UDim.new(0.1, 0) 
    buttonUICorner.Parent = button
    
    button.Parent = frame
    button.MouseButton1Click:Connect(action)
end

local dragToggle = nil
local dragStart = nil
local startPos = nil
local function updateInput(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragToggle = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragToggle = false
            end
        end)
    end
end)
frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        input = input
    end
end)
game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragToggle then
        updateInput(input)
    end
end)
createButton("Button1", "Arena", UDim2.new(0.1, 0, 0.1, 0), function()
game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-0.04911787807941437, 247.79998779296875, -0.9315930008888245))
end)
createButton("Button2", "Safezone (w/ Touchstone)", UDim2.new(0.1, 0, 0.2, 0), function()
game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-0.4817, 97.8, -1.3543))
end)
createButton("Button3", "Shield", UDim2.new(0.1, 0, 0.3, 0), function()
local TouchInterestName = "TouchInterest"
local ShieldSphereHandlePath = "Workspace.Regen.ShieldSphere.Handle"
local Character = game.Players.LocalPlayer.Character

local function triggerTouch()
    local success, ShieldSphereHandle = pcall(function()
        return game:GetService("Workspace").Regen.ShieldSphere.Handle
    end)

    if success then
        for _, child in ipairs(ShieldSphereHandle:GetChildren()) do
            if child.Name == TouchInterestName then
                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, ShieldSphereHandle, 0)
                return true
            end
        end
    else
        warn("ShieldSphereHandle not found at path: " .. ShieldSphereHandlePath)
    end
    
    return false
end

-- Repeat 100 times, even if ShieldSphereHandle is not found
for i = 1, 100 do
    local success = pcall(triggerTouch)
    if not success then
        warn("Failed to trigger touch on attempt: " .. i)
    end
    wait(0.1)  -- Adding a short delay to prevent potential script lag
end

end)
createButton("Button4", "Godmode (req. Shield)", UDim2.new(0.1, 0, 0.4, 0), function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local VirtualUser = game:GetService("VirtualUser")
local StarterGui = game:GetService("StarterGui")

local function createNotification(title, text, duration)
    StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = duration,
    })
end

local function checkHeldItem()
    local tool = humanoid and character:FindFirstChildOfClass("Tool")
    return tool and tool.Name == "ShieldSphere"
end

local function executeScript()
    if checkHeldItem() then
        createNotification("Tip", "Pick up the shield, and when it freezes unequip and equip your shield quickly, and when it starts falling, use the Shield!", 10) 

        -- Simulate backspace key press to drop the held item
        VirtualUser:CaptureController()
        VirtualUser:SetKeyDown("0x08")
        wait(0.1)
        VirtualUser:SetKeyUp("0x08") 
        
        wait(10)  -- Wait for 10 seconds before proceeding

        -- Frame crash simulation
        function fullFrameCrashFor2Seconds()
            local duration = 2
            local endTime = tick() + duration

            while tick() < endTime do
                for i = 1, 10000000 do
                    local _ = math.random() * math.random()
                end
            end
        end

        fullFrameCrashFor2Seconds()
    else
        createNotification("Error", "You need to be holding a ShieldSphere. Get a shield from the button above.", 10)
    end
end
executeScript()
end)
createButton("Button5", "Get All Tools (Use Shield)", UDim2.new(0.1, 0, 0.5, 0), function()
local workspace = game:GetService("Workspace")
-- Attempt to delete Regen.Blades.Model["Smooth Block Model"]
local regenBladesModel = workspace:FindFirstChild("Regen")
if regenBladesModel then
    local blades = regenBladesModel:FindFirstChild("Blades")
    if blades then
        local model = blades:FindFirstChild("Model")
        if model then
            local smoothBlockModel = model:FindFirstChild("Smooth Block Model")
            if smoothBlockModel then
                smoothBlockModel:Destroy()
                print("Smooth Block Model deleted successfully.")
            else
                print("Smooth Block Model not found, skipping deletion step.")
            end
        else
            print("Model not found, skipping deletion step.")
        end
    else
        print("Blades not found, skipping deletion step.")
    end
else
    print("Regen not found, skipping deletion step.")
end

-- Attempt to delete Vortex2
local vortex2 = workspace:FindFirstChild("Vortex2")
if vortex2 then
    vortex2:Destroy()
    print("Vortex2 deleted successfully.")
else
    print("Vortex2 not found, skipping deletion step.")
end

-- Attempt to delete Vortex1
local vortex1 = workspace:FindFirstChild("Vortex1")
if vortex1 then
    vortex1:Destroy()
    print("Vortex1 deleted successfully.")
else
    print("Vortex1 not found, skipping deletion step.")
end
local teleporter = game:GetService("Workspace"):FindFirstChild("Teleporter")
if teleporter then
    local b = teleporter:FindFirstChild("B")
    if b then
        local gate = b:FindFirstChild("Gate")
        if gate then
            gate:Destroy()
            print("Gate deleted successfully.")
        else
            print("Gate not found, skipping deletion step.")
        end
    else
        print("B not found, skipping deletion step.")
    end
else
    print("Teleporter not found, skipping deletion step.")
end

local player = game.Players.LocalPlayer
local character = player.Character
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local function simulateTouch(part)
    if part and part:IsA("BasePart") then
        firetouchinterest(humanoidRootPart, part, 0)
        wait(0.1)
        firetouchinterest(humanoidRootPart, part, 1)
    end
end
local function simulateClick(clickDetector)
    if clickDetector and clickDetector:IsA("ClickDetector") then
        clickDetector:FireServer()
    end
end
for _, instance in pairs(game:GetDescendants()) do
    if instance:IsA("BasePart") then
        if instance:FindFirstChildOfClass("TouchTransmitter") then
            simulateTouch(instance)
        end
        local clickDetector = instance:FindFirstChildOfClass("ClickDetector")
        if clickDetector then
            simulateClick(clickDetector)
        end
    end
end
end)
createButton("Button6", "God's Blade", UDim2.new(0.1, 0, 0.6, 0), function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local tool = character:FindFirstChildOfClass("Tool")

if tool and tool:FindFirstChild("Handle") then
    local handle = tool.Handle
    handle.Size = Vector3.new(999, 999, 999)
    handle.Massless = true
    print("Handle size set to 999,999,999 and made massless.")
else
    print("No tool with handle found.")
end
end)
createButton("Button7", "Map Ruiner", UDim2.new(0.1, 0, 0.7, 0), function()
game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-10.000152587890625, 248.9769744873047, 225.92141723632812))
end)
createButton("Button8", "Sound Control", UDim2.new(0.1, 0, 0.8, 0), function()
loadstring(game:HttpGet("https://pastebin.com/raw/3dWP6BW4"))()
end)
createButton("Button9", "Infinite Yield", UDim2.new(0.1, 0, 0.9, 0), function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

local dragToggle = nil
local dragStart = nil
local startPos = nil

local function updateInput(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragToggle = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragToggle = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        input = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragToggle then
        updateInput(input)
    end
end)

createGUI()

game.Players.LocalPlayer.CharacterAdded:Connect(function()
    wait(1)
    if game.Players.LocalPlayer:FindFirstChild("PlayerGui") and not game.Players.LocalPlayer.PlayerGui:FindFirstChild("SFOTH IV") then
        createGUI()
    end
end)
