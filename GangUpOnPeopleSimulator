local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game:GetService("CoreGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 250)
frame.Position = UDim2.new(0.25, 0, 0.25, 0)
frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
frame.BorderSizePixel = 0 
frame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Text = "<b><i>Gang Up GUI</i></b>"
title.Size = UDim2.new(0.8, 0, 0.1, 0)
title.Position = UDim2.new(0.1, 0, 0, 0)
title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
title.TextColor3 = Color3.fromRGB(0, 0, 139)
title.Font = Enum.Font.SourceSansBold
title.RichText = true
title.TextSize = 24
title.BorderSizePixel = 0
title.Parent = frame

local uiStroke = Instance.new("UIStroke")
uiStroke.Thickness = 2
uiStroke.Parent = frame
local colors = {Color3.fromRGB(255, 0, 0), Color3.fromRGB(0, 255, 0), Color3.fromRGB(0, 0, 255)}
local currentColorIndex = 1
local function updateBorderColor()
    uiStroke.Color = colors[currentColorIndex]
    currentColorIndex = (currentColorIndex % #colors) + 1
end

spawn(function()
    while true do
        updateBorderColor()
        wait(1)
    end
end)

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0.1, 0)
uiCorner.Parent = frame

local function createButton(name, text, position, action)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Text = text
    button.Size = UDim2.new(0.8, 0, 0.1, 0)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 20
    
    local buttonUICorner = Instance.new("UICorner")
    buttonUICorner.CornerRadius = UDim.new(0.1, 0) 
    buttonUICorner.Parent = button
    
    button.Parent = frame
    button.MouseButton1Click:Connect(action)
end

local dragToggle = nil
local dragStart = nil
local startPos = nil
local function updateInput(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragToggle = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragToggle = false
            end
        end)
    end
end)
frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        input = input
    end
end)
game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragToggle then
        updateInput(input)
    end
end)


-- Button 1: Cash Farm (Toggle: Q)
createButton("Button1", "Cash Farm (Rejoin = Off)", UDim2.new(0.1, 0, 0.1, 0), function()
getgenv().lol = true -- set to false to disable
task.spawn(function()
        while true do wait()
            if not getgenv().lol then
                break
            end
            for i,v in pairs(workspace.Particles:WaitForChild("Money"):GetChildren()) do
                if v.Name == "Bundle" then
                    game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = v.CFrame
                end
            end
        end
end)
end)
-- Button 2: ATM 
createButton("Button2", "ATM", UDim2.new(0.1, 0, 0.2, 0), function()
-- Function to create a draggable frame
local function createDraggableFrame(name, text, position)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = name .. "Gui"
    screenGui.Parent = game:GetService("CoreGui")

    local frame = Instance.new("Frame")
    frame.Name = name
    frame.Size = UDim2.new(0, 200, 0, 50) -- Adjust size as needed
    frame.Position = position
    frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2) -- Dark grey background
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.new(1, 1, 1) -- White border
    frame.Parent = screenGui

    local label = Instance.new("TextLabel")
    label.Name = name .. "Label"
    label.Text = text
    label.Size = UDim2.new(1, 0, 1, 0) -- Adjust size to match the frame
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1, 1, 1) -- White text
    label.Font = Enum.Font.SourceSans
    label.TextScaled = true
    label.Parent = frame

    -- Make the frame draggable
    local dragStart, startPos
    local dragging = false

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    return frame
end

-- ATM frame and button functionality
local touchPart = game:GetService("Workspace").Map.ATMs.ATM.TouchPart
local originalSize = touchPart.Size
local originalCanCollide = touchPart.CanCollide
local toggled = false

-- Function to resize and toggle collision
local function toggleATMSize()
    if not toggled then
        touchPart.Size = Vector3.new(999, 999, 999)
        touchPart.CanCollide = false
    else
        touchPart.Size = originalSize
        touchPart.CanCollide = originalCanCollide
    end
    toggled = not toggled
end

-- Create the ATM frame
local atmFrame = createDraggableFrame("ATMFrame", "ATM", UDim2.new(0.1, 0, 0.1, 0))

-- Make the frame clickable to toggle the ATM size
atmFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        toggleATMSize()
    end
end)

end)

-- Button 3: Knife (1$)
createButton("Button3", "Knife (1$)", UDim2.new(0.1, 0, 0.3, 0), function()
    local handlePath = "game:GetService('Workspace').Map.KnifeHouse.KnifeSpawner.KnifeCollector.Handle"
    local handle

    -- Function to teleport the player
    local function teleport()
        local success, err = pcall(function()
            local character = game:GetService("Players").LocalPlayer.Character
            if character and handle then
                character:WaitForChild("HumanoidRootPart").CFrame = handle.CFrame
                -- Check if the player's position matches the handle's position
                if (character.HumanoidRootPart.Position - handle.Position).magnitude < 1 then
                    return true
                end
            end
            return false
        end)
        return success
    end

    -- Continuously attempt to teleport until successful
    while true do
        local success = false
        if not handle then
            local successFind, result = pcall(function()
                handle = game:GetService("Workspace"):FindFirstChild("Map", true):FindFirstChild("KnifeHouse", true):FindFirstChild("KnifeSpawner", true):FindFirstChild("KnifeCollector", true):FindFirstChild("Handle", true)
            end)
            if successFind then
                success = teleport()
            end
        else
            success = teleport()
        end

        if success then
            print("Successfully teleported!")
            break
        end

        wait(0.1) -- Wait for 0.1 seconds between attempts
    end
end)

-- Button 4: Pistol (2$)
createButton("Button4", "Pistol (2$)", UDim2.new(0.1, 0, 0.4, 0), function()
local handlePath = "game:GetService('Workspace').Map.GunSpawner.GunCollector.Handle"
local handle

-- Function to teleport the player
local function teleport()
    local success, err = pcall(function()
        local character = game:GetService("Players").LocalPlayer.Character
        if character and handle then
            character:WaitForChild("HumanoidRootPart").CFrame = handle.CFrame
            -- Check if the player's position matches the handle's position
            if (character.HumanoidRootPart.Position - handle.Position).magnitude < 1 then
                return true
            end
        end
        return false
    end)
    return success
end

-- Continuously attempt to teleport until successful
while true do
    local success = false
    if not handle then
        local successFind, result = pcall(function()
            handle = game:GetService("Workspace"):FindFirstChild("Map"):FindFirstChild("GunSpawner"):FindFirstChild("GunCollector"):FindFirstChild("Handle")
        end)
        if successFind and result then
            handle = result -- Assign the handle after finding it
            success = teleport()
        end
    else
        success = teleport()
    end

    if success then
        print("Successfully teleported!")
        break
    end

    wait(0.1) -- Wait for 0.1 seconds between attempts
end
end)
-- Button 5: Shotgun (10$)
createButton("Button5", "Shotgun (10$)", UDim2.new(0.1, 0, 0.5, 0), function()
local handlePath = "game:GetService('Workspace').Map.ShotgunSpawner.ShotgunCollector.Handle"
local handle

-- Function to teleport the player
local function teleport()
    local success, err = pcall(function()
        local character = game:GetService("Players").LocalPlayer.Character
        if character and handle then
            character:WaitForChild("HumanoidRootPart").CFrame = handle.CFrame
            -- Check if the player's position matches the handle's position
            if (character.HumanoidRootPart.Position - handle.Position).magnitude < 1 then
                return true
            end
        end
        return false
    end)
    return success
end

-- Continuously attempt to teleport until successful
while true do
    local success = false
    if not handle then
        local successFind, result = pcall(function()
            handle = game:GetService("Workspace"):FindFirstChild("Map"):FindFirstChild("ShotgunSpawner"):FindFirstChild("ShotgunCollector"):FindFirstChild("Handle")
        end)
        if successFind and result then
            handle = result -- Assign the handle after finding it
            success = teleport()
        end
    else
        success = teleport()
    end

    if success then
        print("Successfully teleported!")
        break
    end

    wait(0.1) -- Wait for 0.1 seconds between attempts
end
end)
-- Button 6: Chair (50$)
createButton("Button6", "Chair (50$)", UDim2.new(0.1, 0, 0.6, 0), function()
    -- Function to teleport the player to a specified position and back
    local function teleportAndReturn()
        local success, err = pcall(function()
            local character = game:GetService("Players").LocalPlayer.Character
            if character then
                local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

                -- Get the player's current position
                local originalPosition = humanoidRootPart.Position
                print("Original Position: ", originalPosition)

                -- Teleport the player to the specified coordinates (-157, 4, -44)
                humanoidRootPart.CFrame = CFrame.new(-157, 4, -44)

                -- Wait for 0.3 seconds
                wait(0.1)

                -- Teleport the player back to the original position
                humanoidRootPart.CFrame = CFrame.new(originalPosition)

                return true
            end
            return false
        end)
        return success
    end

    -- Call the function to teleport the player and return
    teleportAndReturn()
end)

-- Button 7: Soda (2$)
createButton("Button7", "Soda (2$)", UDim2.new(0.1, 0, 0.7, 0), function()
    game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(-21, 3, -69)
end)

-- Button 8: Sandwich (150$)
createButton("Button8", "Sandwich (150$)", UDim2.new(0.1, 0, 0.8, 0), function()
    -- Function to teleport the player to a specified position and back
    local function teleportAndReturn()
        local success, err = pcall(function()
            local character = game:GetService("Players").LocalPlayer.Character
            if character then
                local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

                -- Get the player's current position
                local originalPosition = humanoidRootPart.Position
                print("Original Position: ", originalPosition)

                -- Teleport the player to the specified coordinates (-102, 4, -72)
                humanoidRootPart.CFrame = CFrame.new(-102, 4, -72)

                -- Wait for 0.3 seconds
                wait(0.3)

                -- Teleport the player back to the original position
                humanoidRootPart.CFrame = CFrame.new(originalPosition)

                return true
            end
            return false
        end)
        return success
    end

    -- Call the function to teleport the player and return
    teleportAndReturn()
end)

-- Button 9: Infinite Yield FE
createButton("Button9", "Infinite Yield FE", UDim2.new(0.1, 0, 0.9, 0), function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)
